{

  "fragshader":"#ifdef GL_ES precision highp float; #endif \n #include <common> \n varying vec2 texcoord; uniform sampler2D text; uniform vec2 positions[16]; uniform float data[16]; const int num = 16; float colormap_red(float x) { if (x < 0.7) { return 4.0 * x - 1.5; } else { return -4.0 * x + 4.5; } } float colormap_green(float x) { if (x < 0.5) { return 4.0 * x - 0.5; } else { return -4.0 * x + 3.5; } } float colormap_blue(float x) { if (x < 0.3) { return 4.0 * x + 0.5; } else { return -4.0 * x + 2.5; } } vec4 colormap(float x) { float r = clamp(colormap_red(x), 0.0, 1.0); float g = clamp(colormap_green(x), 0.0, 1.0); float b = clamp(colormap_blue(x), 0.0, 1.0); return vec4(r, g, b, 1.0); } void main( void ) { float val = texture2D(text, texcoord).r; float finalcol = 0.; for(int i = 0; i < num; i++) { finalcol += data[i]*exp(-1.*pow((distance(positions[i], texcoord) / 0.05), 2.)); } gl_FragColor = colormap(clamp(finalcol * val, 0., 1.));",

  "vertexshader":"#ifdef GL_ES precision highp float; #endif \n varying vec2 texcoord; void main() {gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0); texcoord  = uv;}"

}
